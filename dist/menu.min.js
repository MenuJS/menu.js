!function(t){"use strict";/**
 * menu.js JavaScript Library
 * Released under the MIT license
 */
var e=function(){this._menuItems={},this._toArray=function(t){var e=[];for(var n in t)t.hasOwnProperty(n)&&e.push(t[n]);return e}};e.prototype.buildAncestorChain=function(t,e,n){var i=t.split(".");if(0!==t.length&&0!==i.length){var r=i.shift();"undefined"==typeof e[r]&&(e[r]=0===i.length?n:{},0===i.length&&(e[r]=n)),this.buildAncestorChain(i.join("."),e[r],n)}},e.prototype.menuItemTree=function(t){var e={},n=this,i={};if("undefined"!=typeof t){var r=new RegExp("^"+t+".");for(var s in this._menuItems)this._menuItems.hasOwnProperty(s)&&null!==s.match(r)&&(i[s.replace(r,"")]=this._menuItems[s])}else i=this._menuItems;for(var o in i)i.hasOwnProperty(o)&&n.buildAncestorChain(o,e,i[o]);return this._toArray(e)},e.prototype.menuItem=function(t,e){if("undefined"==typeof e){if("undefined"==typeof this._menuItems[t])throw t+" is not a menu item";return this._menuItems[t]}return this._menuItems[t]=new i(e),this},e.prototype.menuItems=function(){return this._menuItems};/**
 * Borrowed from jQuery JavaScript Library v2.1.4
 * http://jquery.com/
 *
 * Copyright 2005, 2014 jQuery Foundation, Inc. and other contributors
 * Released under the MIT license
 * http://jquery.org/license
 */
var n=function(){var t,e,n,i,r,s,o=arguments[0]||{},u=1,h=arguments.length,f=!1;for("boolean"==typeof o&&(f=o,o=arguments[u]||{},u++),"object"==typeof o||jQuery.isFunction(o)||(o={}),u===h&&(o=this,u--);h>u;u++)if(null!=(t=arguments[u]))for(e in t)n=o[e],i=t[e],o!==i&&(f&&i&&(jQuery.isPlainObject(i)||(r=jQuery.isArray(i)))?(r?(r=!1,s=n&&jQuery.isArray(n)?n:[]):s=n&&jQuery.isPlainObject(n)?n:{},o[e]=jQuery.extend(f,s,i)):void 0!==i&&(o[e]=i));return o},i=function(t){this.weight=0,n(this,t)};i.prototype.children=function(){var t=[];for(var e in this)this.hasOwnProperty(e)&&null!==this[e]&&"object"==typeof this[e]&&this[e]instanceof i&&t.push(this[e]);return t},i.prototype.hasChildren=function(){return this.children().length>0},i.prototype.hasVisibleChildren=function(){return this.children().filter(function(t){return t.isVisible()!==!1}).length>0},i.prototype.isVisible=function(){return!0},i.prototype.isHeavy=function(){return this.hasOwnProperty("weight")?this.weight>=0:void 0};var r={Menu:e,MenuItem:i};"undefined"!=typeof exports?("undefined"!=typeof module&&module.exports&&(exports=module.exports=r),exports.MenuJs=r):t.MenuJs=r}(this);
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIm1lbnUuanMiXSwibmFtZXMiOlsiZ2xvYmFsIiwiTWVudSIsInRoaXMiLCJfbWVudUl0ZW1zIiwiX3RvQXJyYXkiLCJpdGVtcyIsImFyciIsImtleSIsImhhc093blByb3BlcnR5IiwicHVzaCIsInByb3RvdHlwZSIsImJ1aWxkQW5jZXN0b3JDaGFpbiIsIm5hbWUiLCJjb25maWciLCJrZXlzIiwic3BsaXQiLCJsZW5ndGgiLCJzaGlmdCIsImpvaW4iLCJtZW51SXRlbVRyZWUiLCJtZW51TmFtZSIsInNlbGYiLCJtZW51SXRlbXNUb1RyYW5zZm9ybSIsIm1lbnVOYW1lUmVnZXgiLCJSZWdFeHAiLCJtZW51SXRlbU5hbWUiLCJtYXRjaCIsInJlcGxhY2UiLCJtZW51SXRlbU5hbWVUb1RyYW5zZm9ybSIsIm1lbnVJdGVtIiwiTWVudUl0ZW0iLCJtZW51SXRlbXMiLCJleHRlbmQiLCJvcHRpb25zIiwic3JjIiwiY29weSIsImNvcHlJc0FycmF5IiwiY2xvbmUiLCJ0YXJnZXQiLCJhcmd1bWVudHMiLCJpIiwiZGVlcCIsImpRdWVyeSIsImlzRnVuY3Rpb24iLCJpc1BsYWluT2JqZWN0IiwiaXNBcnJheSIsInVuZGVmaW5lZCIsIndlaWdodCIsImNoaWxkcmVuIiwicHJvcGVydHlOYW1lIiwiaGFzQ2hpbGRyZW4iLCJoYXNWaXNpYmxlQ2hpbGRyZW4iLCJmaWx0ZXIiLCJjaGlsZCIsImlzVmlzaWJsZSIsImlzSGVhdnkiLCJtb2R1bGVFeHBvcnRzIiwiZXhwb3J0cyIsIm1vZHVsZSIsIk1lbnVKcyJdLCJtYXBwaW5ncyI6IkNBQUEsU0FBVUEsR0FDVjs7OztBQVFBLEdBQUlDLEdBQU8sV0FDVEMsS0FBS0MsY0FDTEQsS0FBS0UsU0FBVyxTQUFVQyxHQUN4QixHQUFJQyxLQUNKLEtBQUssR0FBSUMsS0FBT0YsR0FDVkEsRUFBTUcsZUFBZUQsSUFDdkJELEVBQUlHLEtBQUtKLEVBQU1FLEdBR25CLE9BQU9ELElBT1hMLEdBQUtTLFVBQVVDLG1CQUFxQixTQUFVQyxF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bENjLEVBQVNwQixVQUFVeUMsbUJBQXFCLFdBQ3RDLE1BQU9qRCxNQUFLOEMsV0FBV0ksT0FBTyxTQUFVQyxHQUNwQyxNQUFPQSxHQUFNQyxlQUFnQixJQUM1QnRDLE9BQVMsR0FHaEJjLEVBQVNwQixVQUFVNEMsVUFBWSxXQUM3QixPQUFPLEdBR1R4QixFQUFTcEIsVUFBVTZDLFFBQVUsV0FDM0IsTUFBSXJELE1BQUtNLGVBQWUsVUFDZk4sS0FBSzZDLFFBQVUsRUFEeEIsT0FPRixJQUFJUyxJQUNGdkQsS0FBTUEsRUFDTjZCLFNBQVVBLEVBR1csb0JBQVoyQixVQUNhLG1CQUFYQyxTQUEwQkEsT0FBT0QsVUFDMUNBLFFBQVVDLE9BQU9ELFFBQVVELEdBRTdCQyxRQUFRRSxPQUFTSCxHQUVqQnhELEVBQU8yRCxPQUFTSCxHQUdmdEQiLCJmaWxlIjoibWVudS5qcyIsInNvdXJjZXNDb250ZW50IjpbIihmdW5jdGlvbihnbG9iYWwpe1xuJ3VzZSBzdHJpY3QnO1xuIC8qKlxyXG4gKiBtZW51LmpzIEphdmFTY3JpcHQgTGlicmFyeVxyXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcclxuICovXHJcblxyXG4vKiBnbG9iYWwgTWVudUl0ZW0gKi9cclxuXHJcbnZhciBNZW51ID0gZnVuY3Rpb24gKCkge1xyXG4gIHRoaXMuX21lbnVJdGVtcyA9IHt9O1xyXG4gIHRoaXMuX3RvQXJyYXkgPSBmdW5jdGlvbiAoaXRlbXMpIHtcclxuICAgIHZhciBhcnIgPSBbXTtcclxuICAgIGZvciAodmFyIGtleSBpbiBpdGVtcykge1xyXG4gICAgICBpZiAoaXRlbXMuaGFzT3duUHJvcGVydHkoa2V5KSkge1xyXG4gICAgICAgIGFyci5wdXNoKGl0ZW1zW2tleV0pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgICByZXR1cm4gYXJyO1xyXG4gIH07XHJcbn07XHJcblxyXG4vKipcclxuICogUmVjdXJzaXZlbHkgbWFwIGEgZmxhdCBhcnJheSBvZiBtZW51IGl0ZW1zIHRvIGEgbmVzdGVkIG9iamVjdCBzdWl0YWJsZSB0byBnZW5lcmF0ZSBoaWVyYXJjaGljYWwgSFRNTCBmcm9tLlxyXG4gKi9cclxuTWVudS5wcm90b3R5cGUuYnVpbGRBbmNlc3RvckNoYWluID0gZnVuY3Rpb24gKG5hbWUsIGl0ZW1zLCBjb25maWcpIHtcclxuICB2YXIga2V5cyA9IG5hbWUuc3BsaXQoJy4nKTtcclxuICBpZiAobmFtZS5sZW5ndGggPT09IDAgfHwga2V5cy5sZW5ndGggPT09IDApIHtcclxuICAgIHJldHVybjtcclxuICB9XHJcbiAgdmFyIGtleSA9IGtleXMuc2hpZnQoKTtcclxuICBpZiAodHlwZW9mIGl0ZW1zW2tleV0gPT09ICd1bmRlZmluZWQnKSB7XHJcbiAgICBpdGVtc1trZXldID0ga2V5cy5sZW5ndGggPT09IDAgPyBjb25maWcgOiB7fTtcclxuICAgIGlmIChrZXlzLmxlbmd0aCA9PT0gMCkge1xyXG4gICAgICBpdGVtc1trZXldID0gY29uZmlnO1xyXG4gICAgfVxyXG4gIH1cclxuICB0aGlzLmJ1aWxkQW5jZXN0b3JDaGFpbihrZXlzLmpvaW4oJy4nKSwgaXRlbXNba2V5XSwgY29uZmlnKTtcclxufTtcclxuXHJcbk1lbnUucHJvdG90eXBlLm1lbnVJdGVtVHJlZSA9IGZ1bmN0aW9uIChtZW51TmFtZSkge1xyXG4gIHZhciBpdGVtcyA9IHt9O1xyXG4gIHZhciBzZWxmID0gdGhpcztcclxuICB2YXIgbWVudUl0ZW1zVG9UcmFuc2Zvcm0gPSB7fTtcclxuICBpZiAodHlwZW9mIG1lbnVOYW1lICE9PSAndW5kZWZpbmVkJykge1xyXG4gICAgdmFyIG1lbnVOYW1lUmVnZXggPSBuZXcgUmVnRXhwKCdeJyArIG1lbnVOYW1lICsgJy4nKTtcclxuICAgIGZvciAodmFyIG1lbnVJdGVtTmFtZSBpbiB0aGlzLl9tZW51SXRlbXMpIHtcclxuICAgICAgaWYgKHRoaXMuX21lbnVJdGVtcy5oYXNPd25Qcm9wZXJ0eShtZW51SXRlbU5hbWUpKSB7XHJcbiAgICAgICAgaWYgKG1lbnVJdGVtTmFtZS5tYXRjaChtZW51TmFtZVJlZ2V4KSAhPT0gbnVsbCkge1xyXG4gICAgICAgICAgbWVudUl0ZW1zVG9UcmFuc2Zvcm1bbWVudUl0ZW1OYW1lLnJlcGxhY2UobWVudU5hbWVSZWdleCwgJycpXSA9IHRoaXMuX21lbnVJdGVtc1ttZW51SXRlbU5hbWVdO1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH0gZWxzZSB7XHJcbiAgICBtZW51SXRlbXNUb1RyYW5zZm9ybSA9IHRoaXMuX21lbnVJdGVtcztcclxuICB9XHJcbiAgZm9yICh2YXIgbWVudUl0ZW1OYW1lVG9UcmFuc2Zvcm0gaW4gbWVudUl0ZW1zVG9UcmFuc2Zvcm0pIHtcclxuICAgIGlmIChtZW51SXRlbXNUb1RyYW5zZm9ybS5oYXNPd25Qcm9wZXJ0eShtZW51SXRlbU5hbWVUb1RyYW5zZm9ybSkpIHtcclxuICAgICAgc2VsZi5idWlsZEFuY2VzdG9yQ2hhaW4obWVudUl0ZW1OYW1lVG9UcmFuc2Zvcm0sIGl0ZW1zLCBtZW51SXRlbXNUb1RyYW5zZm9ybVttZW51SXRlbU5hbWVUb1RyYW5zZm9ybV0pO1xyXG4gICAgfVxyXG4gIH1cclxuICByZXR1cm4gdGhpcy5fdG9BcnJheShpdGVtcyk7XHJcbn07XHJcblxyXG5NZW51LnByb3RvdHlwZS5tZW51SXRlbSA9IGZ1bmN0aW9uIChuYW1lLCBjb25maWcpIHtcclxuICBpZiAodHlwZW9mIGNvbmZpZyA9PT0gJ3VuZGVmaW5lZCcpIHtcclxuICAgIGlmICh0eXBlb2YgdGhpcy5fbWVudUl0ZW1zW25hbWVdID09PSAndW5kZWZpbmVkJykge1xyXG4gICAgICB0aHJvdyBuYW1lICsgJyBpcyBub3QgYSBtZW51IGl0ZW0nO1xyXG4gICAgfVxyXG4gICAgcmV0dXJuIHRoaXMuX21lbnVJdGVtc1tuYW1lXTtcclxuICB9XHJcbiAgdGhpcy5fbWVudUl0ZW1zW25hbWVdID0gbmV3IE1lbnVJdGVtKGNvbmZpZyk7XHJcbiAgcmV0dXJuIHRoaXM7XHJcbn07XHJcblxyXG5NZW51LnByb3RvdHlwZS5tZW51SXRlbXMgPSBmdW5jdGlvbiAoKSB7XHJcbiAgcmV0dXJuIHRoaXMuX21lbnVJdGVtcztcclxufTtcclxuXG4vKipcclxuICogQm9ycm93ZWQgZnJvbSBqUXVlcnkgSmF2YVNjcmlwdCBMaWJyYXJ5IHYyLjEuNFxyXG4gKiBodHRwOi8vanF1ZXJ5LmNvbS9cclxuICpcclxuICogQ29weXJpZ2h0IDIwMDUsIDIwMTQgalF1ZXJ5IEZvdW5kYXRpb24sIEluYy4gYW5kIG90aGVyIGNvbnRyaWJ1dG9yc1xyXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcclxuICogaHR0cDovL2pxdWVyeS5vcmcvbGljZW5zZVxyXG4gKi9cclxuXHJcbnZhciBleHRlbmQgPSBmdW5jdGlvbiAoKSB7XHJcbiAgdmFyIG9wdGlvbnMsIG5hbWUsIHNyYywgY29weSwgY29weUlzQXJyYXksIGNsb25lLFxyXG4gICAgdGFyZ2V0ID0gYXJndW1lbnRzWzBdIHx8IHt9LFxyXG4gICAgaSA9IDEsXHJcbiAgICBsZW5ndGggPSBhcmd1bWVudHMubGVuZ3RoLFxyXG4gICAgZGVlcCA9IGZhbHNlO1xyXG5cclxuICAvLyBIYW5kbGUgYSBkZWVwIGNvcHkgc2l0dWF0aW9uXHJcbiAgaWYgKHR5cGVvZiB0YXJnZXQgPT09ICdib29sZWFuJykge1xyXG4gICAgZGVlcCA9IHRhcmdldDtcclxuXHJcbiAgICAvLyBTa2lwIHRoZSBib29sZWFuIGFuZCB0aGUgdGFyZ2V0XHJcbiAgICB0YXJnZXQgPSBhcmd1bWVudHNbaV0gfHwge307XHJcbiAgICBpKys7XHJcbiAgfVxyXG5cclxuICAvLyBIYW5kbGUgY2FzZSB3aGVuIHRhcmdldCBpcyBhIHN0cmluZyBvciBzb21ldGhpbmcgKHBvc3NpYmxlIGluIGRlZXAgY29weSlcclxuICBpZiAodHlwZW9mIHRhcmdldCAhPT0gJ29iamVjdCcgJiYgIWpRdWVyeS5pc0Z1bmN0aW9uKHRhcmdldCkpIHtcclxuICAgIHRhcmdldCA9IHt9O1xyXG4gIH1cclxuXHJcbiAgLy8gRXh0ZW5kIGpRdWVyeSBpdHNlbGYgaWYgb25seSBvbmUgYXJndW1lbnQgaXMgcGFzc2VkXHJcbiAgaWYgKGkgPT09IGxlbmd0aCkge1xyXG4gICAgdGFyZ2V0ID0gdGhpcztcclxuICAgIGktLTtcclxuICB9XHJcblxyXG4gIGZvciAoOyBpIDwgbGVuZ3RoOyBpKyspIHtcclxuICAgIC8vIE9ubHkgZGVhbCB3aXRoIG5vbi1udWxsL3VuZGVmaW5lZCB2YWx1ZXNcclxuICAgIGlmICgob3B0aW9ucyA9IGFyZ3VtZW50c1tpXSkgIT0gbnVsbCkge1xyXG4gICAgICAvLyBFeHRlbmQgdGhlIGJhc2Ugb2JqZWN0XHJcbiAgICAgIGZvciAobmFtZSBpbiBvcHRpb25zKSB7XHJcbiAgICAgICAgc3JjID0gdGFyZ2V0W25hbWVdO1xyXG4gICAgICAgIGNvcHkgPSBvcHRpb25zW25hbWVdO1xyXG5cclxuICAgICAgICAvLyBQcmV2ZW50IG5ldmVyLWVuZGluZyBsb29wXHJcbiAgICAgICAgaWYgKHRhcmdldCA9PT0gY29weSkge1xyXG4gICAgICAgICAgY29udGludWU7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAvLyBSZWN1cnNlIGlmIHdlJ3JlIG1lcmdpbmcgcGxhaW4gb2JqZWN0cyBvciBhcnJheXNcclxuICAgICAgICBpZiAoZGVlcCAmJiBjb3B5ICYmICggalF1ZXJ5LmlzUGxhaW5PYmplY3QoY29weSkgfHwgKGNvcHlJc0FycmF5ID0galF1ZXJ5LmlzQXJyYXkoY29weSkpICkpIHtcclxuICAgICAgICAgIGlmIChjb3B5SXNBcnJheSkge1xyXG4gICAgICAgICAgICBjb3B5SXNBcnJheSA9IGZhbHNlO1xyXG4gICAgICAgICAgICBjbG9uZSA9IHNyYyAmJiBqUXVlcnkuaXNBcnJheShzcmMpID8gc3JjIDogW107XHJcblxyXG4gICAgICAgICAgfSBlbHNlIHtcclxuICAgICAgICAgICAgY2xvbmUgPSBzcmMgJiYgalF1ZXJ5LmlzUGxhaW5PYmplY3Qoc3JjKSA/IHNyYyA6IHt9O1xyXG4gICAgICAgICAgfVxyXG5cclxuICAgICAgICAgIC8vIE5ldmVyIG1vdmUgb3JpZ2luYWwgb2JqZWN0cywgY2xvbmUgdGhlbVxyXG4gICAgICAgICAgdGFyZ2V0W25hbWVdID0galF1ZXJ5LmV4dGVuZChkZWVwLCBjbG9uZSwgY29weSk7XHJcblxyXG4gICAgICAgICAgLy8gRG9uJ3QgYnJpbmcgaW4gdW5kZWZpbmVkIHZhbHVlc1xyXG4gICAgICAgIH0gZWxzZSBpZiAoY29weSAhPT0gdW5kZWZpbmVkKSB7XHJcbiAgICAgICAgICB0YXJnZXRbbmFtZV0gPSBjb3B5O1xyXG4gICAgICAgIH1cclxuICAgICAgfVxyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgLy8gUmV0dXJuIHRoZSBtb2RpZmllZCBvYmplY3RcclxuICByZXR1cm4gdGFyZ2V0O1xyXG59O1xyXG5cbi8qKlxyXG4gKiBtZW51LmpzIEphdmFTY3JpcHQgTGlicmFyeVxyXG4gKiBSZWxlYXNlZCB1bmRlciB0aGUgTUlUIGxpY2Vuc2VcclxuICovXHJcblxyXG4vKiBnbG9iYWwgZXh0ZW5kICovXHJcblxyXG52YXIgTWVudUl0ZW0gPSBmdW5jdGlvbiAoY29uZmlnKSB7XHJcbiAgdGhpcy53ZWlnaHQgPSAwO1xyXG4gIGV4dGVuZCh0aGlzLCBjb25maWcpO1xyXG59O1xyXG5cclxuTWVudUl0ZW0ucHJvdG90eXBlLmNoaWxkcmVuID0gZnVuY3Rpb24gKCkge1xyXG4gIHZhciBjaGlsZHJlbiA9IFtdO1xyXG4gIGZvciAodmFyIHByb3BlcnR5TmFtZSBpbiB0aGlzKSB7XHJcbiAgICBpZiAodGhpcy5oYXNPd25Qcm9wZXJ0eShwcm9wZXJ0eU5hbWUpKSB7XHJcbiAgICAgIGlmICh0aGlzW3Byb3BlcnR5TmFtZV0gIT09IG51bGwgJiZcclxuICAgICAgICB0eXBlb2YgdGhpc1twcm9wZXJ0eU5hbWVdID09PSAnb2JqZWN0JyAmJlxyXG4gICAgICAgIHRoaXNbcHJvcGVydHlOYW1lXSBpbnN0YW5jZW9mIE1lbnVJdGVtKSB7XHJcbiAgICAgICAgY2hpbGRyZW4ucHVzaCh0aGlzW3Byb3BlcnR5TmFtZV0pO1xyXG4gICAgICB9XHJcbiAgICB9XHJcbiAgfVxyXG4gIHJldHVybiBjaGlsZHJlbjtcclxufTtcclxuXHJcbk1lbnVJdGVtLnByb3RvdHlwZS5oYXNDaGlsZHJlbiA9IGZ1bmN0aW9uICgpIHtcclxuICByZXR1cm4gdGhpcy5jaGlsZHJlbigpLmxlbmd0aCA+IDA7XHJcbn07XHJcblxyXG5NZW51SXRlbS5wcm90b3R5cGUuaGFzVmlzaWJsZUNoaWxkcmVuID0gZnVuY3Rpb24gKCkge1xyXG4gIHJldHVybiB0aGlzLmNoaWxkcmVuKCkuZmlsdGVyKGZ1bmN0aW9uIChjaGlsZCkge1xyXG4gICAgICByZXR1cm4gY2hpbGQuaXNWaXNpYmxlKCkgIT09IGZhbHNlO1xyXG4gICAgfSkubGVuZ3RoID4gMDtcclxufTtcclxuXHJcbk1lbnVJdGVtLnByb3RvdHlwZS5pc1Zpc2libGUgPSBmdW5jdGlvbiAoKSB7XHJcbiAgcmV0dXJuIHRydWU7XHJcbn07XHJcblxyXG5NZW51SXRlbS5wcm90b3R5cGUuaXNIZWF2eSA9IGZ1bmN0aW9uICgpIHtcclxuICBpZiAodGhpcy5oYXNPd25Qcm9wZXJ0eSgnd2VpZ2h0JykpIHtcclxuICAgIHJldHVybiB0aGlzLndlaWdodCA+PSAwO1xyXG4gIH1cclxufTtcclxuXG4vKiBnbG9iYWwgTWVudSwgTWVudUl0ZW0sIGdsb2JhbCAqL1xyXG5cclxudmFyIG1vZHVsZUV4cG9ydHMgPSB7XHJcbiAgTWVudTogTWVudSxcclxuICBNZW51SXRlbTogTWVudUl0ZW1cclxufTtcclxuXHJcbmlmICh0eXBlb2YgZXhwb3J0cyAhPT0gJ3VuZGVmaW5lZCcpIHtcclxuICBpZiAodHlwZW9mIG1vZHVsZSAhPT0gJ3VuZGVmaW5lZCcgJiYgbW9kdWxlLmV4cG9ydHMpIHtcclxuICAgIGV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IG1vZHVsZUV4cG9ydHM7XHJcbiAgfVxyXG4gIGV4cG9ydHMuTWVudUpzID0gbW9kdWxlRXhwb3J0cztcclxufSBlbHNlIHtcclxuICBnbG9iYWwuTWVudUpzID0gbW9kdWxlRXhwb3J0cztcclxufVxyXG5cbn0pKHRoaXMpOyJdLCJzb3VyY2VSb290IjoiL3NvdXJjZS8ifQ==
